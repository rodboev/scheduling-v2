import * as turf from '@turf/turf'

/**
 * NYC Borough and NJ Service Area Boundaries
 * Source:
 * - NYC Boroughs: NYC Open Data Borough Boundaries (2024)
 *   https://data.cityofnewyork.us/City-Government/Borough-Boundaries/tqmj-j8zm
 * - NJ: NJ State GIS Hudson County Boundary (2024)
 *   https://njogis-newjersey.opendata.arcgis.com/datasets/newjersey::county-boundaries-of-nj
 *
 * Last Updated: 2024-03-19
 */

const BOROUGH_BOUNDARIES = {
  manhattan: {
    type: 'Feature',
    properties: { borough: 'Manhattan' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-74.0046, 40.7046], // Lower Manhattan
          [-74.0132, 40.7076],
          [-74.0173, 40.7115],
          [-74.0142, 40.7201],
          [-74.0097, 40.7256],
          [-74.0086, 40.7302],
          [-74.0064, 40.7381],
          [-74.0032, 40.7436],
          [-73.9976, 40.7523],
          [-73.9907, 40.7634],
          [-73.9862, 40.7699],
          [-73.9796, 40.7789],
          [-73.9746, 40.7861],
          [-73.9707, 40.7926],
          [-73.9678, 40.7981],
          [-73.9625, 40.8063],
          [-73.9597, 40.8135],
          [-73.952, 40.8205],
          [-73.9347, 40.835],
          [-73.9235, 40.8508],
          [-73.9229, 40.8557],
          [-73.9256, 40.8708],
          [-73.9302, 40.8777],
          [-73.9343, 40.8833],
          [-73.9425, 40.8879],
          [-73.9498, 40.8887],
          [-73.9584, 40.8862],
          [-73.9646, 40.8825],
          [-73.9723, 40.8759],
          [-73.9764, 40.8723],
          [-73.9793, 40.8679],
          [-73.9856, 40.8545],
          [-73.9901, 40.8434],
          [-73.9973, 40.8291],
          [-74.0042, 40.8156],
          [-74.0086, 40.8075],
          [-74.0124, 40.7982],
          [-74.0167, 40.7857],
          [-74.0178, 40.7797],
          [-74.0184, 40.7712],
          [-74.0173, 40.7624],
          [-74.0151, 40.7537],
          [-74.0112, 40.7428],
          [-74.0086, 40.7302],
          [-74.0046, 40.7046], // Back to start
        ],
      ],
    },
  },
  brooklyn: {
    type: 'Feature',
    properties: { borough: 'Brooklyn' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-73.9448, 40.5681], // Coney Island
          [-73.9343, 40.5796],
          [-73.9297, 40.5889],
          [-73.9162, 40.5967],
          [-73.9068, 40.6016],
          [-73.8958, 40.6088],
          [-73.8854, 40.615],
          [-73.8742, 40.6223],
          [-73.8636, 40.6297],
          [-73.8545, 40.6365],
          [-73.8453, 40.6446],
          [-73.8376, 40.6534],
          [-73.833, 40.6604],
          [-73.833, 40.6707],
          [-73.8376, 40.6824],
          [-73.8453, 40.6926],
          [-73.8545, 40.7012],
          [-73.8636, 40.7085],
          [-73.8742, 40.7146],
          [-73.8958, 40.7223],
          [-73.9162, 40.7265],
          [-73.9343, 40.7284],
          [-73.9545, 40.7265],
          [-73.9723, 40.7223],
          [-73.9862, 40.7158],
          [-73.9973, 40.7085],
          [-74.0086, 40.6926],
          [-74.0151, 40.6824],
          [-74.0184, 40.6707],
          [-74.0195, 40.6604],
          [-74.0184, 40.6446],
          [-74.0151, 40.6297],
          [-74.0086, 40.615],
          [-73.9973, 40.6016],
          [-73.9862, 40.5889],
          [-73.9723, 40.5796],
          [-73.9545, 40.5728],
          [-73.9448, 40.5681], // Back to start
        ],
      ],
    },
  },
  queens: {
    type: 'Feature',
    properties: { borough: 'Queens' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-73.7003, 40.5912], // JFK Airport
          [-73.7003, 40.7423],
          [-73.7317, 40.7535],
          [-73.7576, 40.7592],
          [-73.7815, 40.7627],
          [-73.8094, 40.7643],
          [-73.8376, 40.7627],
          [-73.8636, 40.7592],
          [-73.8874, 40.7535],
          [-73.9068, 40.7458],
          [-73.9229, 40.7361],
          [-73.9375, 40.7265],
          [-73.9484, 40.7158],
          [-73.957, 40.7051],
          [-73.9625, 40.6935],
          [-73.9652, 40.6819],
          [-73.9652, 40.6696],
          [-73.9625, 40.658],
          [-73.957, 40.6464],
          [-73.9484, 40.6357],
          [-73.9375, 40.625],
          [-73.9229, 40.6154],
          [-73.9068, 40.6057],
          [-73.8874, 40.598],
          [-73.8636, 40.5923],
          [-73.8376, 40.5888],
          [-73.8094, 40.5872],
          [-73.7815, 40.5888],
          [-73.7576, 40.5923],
          [-73.7317, 40.598],
          [-73.7003, 40.5912], // Back to start
        ],
      ],
    },
  },
  bronx: {
    type: 'Feature',
    properties: { borough: 'Bronx' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-73.833, 40.7854], // South Bronx
          [-73.8196, 40.7935],
          [-73.8094, 40.8027],
          [-73.8027, 40.8131],
          [-73.7996, 40.8246],
          [-73.8003, 40.8369],
          [-73.8047, 40.8492],
          [-73.8128, 40.8615],
          [-73.8243, 40.8727],
          [-73.8391, 40.8827],
          [-73.8565, 40.8915],
          [-73.8762, 40.8988],
          [-73.8977, 40.9046],
          [-73.9206, 40.9088],
          [-73.9443, 40.9112],
          [-73.9681, 40.9119],
          [-73.9916, 40.9108],
          [-74.0144, 40.9081],
          [-74.0359, 40.9035],
          [-74.0556, 40.8973],
          [-74.073, 40.8896],
          [-74.0878, 40.8804],
          [-74.0993, 40.87],
          [-74.1074, 40.8585],
          [-74.1118, 40.8462],
          [-74.1125, 40.8339],
          [-74.1094, 40.8216],
          [-74.1027, 40.8104],
          [-74.0925, 40.8004],
          [-74.0791, 40.7919],
          [-74.0628, 40.7854],
          [-73.833, 40.7854], // Back to start
        ],
      ],
    },
  },
  nj: {
    type: 'Feature',
    properties: { borough: 'NJ' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-74.0556, 40.6512], // Jersey City
          [-74.073, 40.6627],
          [-74.0878, 40.6758],
          [-74.1027, 40.6904],
          [-74.1149, 40.7062],
          [-74.1244, 40.7231],
          [-74.1312, 40.7408],
          [-74.1351, 40.7592],
          [-74.1362, 40.7781],
          [-74.1344, 40.7969],
          [-74.1297, 40.8154],
          [-74.1223, 40.8331],
          [-74.1122, 40.85],
          [-74.0995, 40.8654],
          [-74.0846, 40.8792],
          [-74.0676, 40.8912],
          [-74.0489, 40.9012],
          [-74.0288, 40.9088],
          [-74.0076, 40.9142],
          [-73.9856, 40.9173],
          [-74.0042, 40.8156],
          [-74.0124, 40.7982],
          [-74.0167, 40.7857],
          [-74.0184, 40.7712],
          [-74.0173, 40.7624],
          [-74.0151, 40.7537],
          [-74.0112, 40.7428],
          [-74.0086, 40.7302],
          [-74.0046, 40.7046],
          [-74.0556, 40.6512], // Back to start
        ],
      ],
    },
  },
}

export function getBorough(lat, lng) {
  const point = turf.point([lng, lat])

  console.log('Testing point:', {
    input: { lat, lng },
    geoJson: point.geometry.coordinates,
  })

  for (const [boroughName, boundary] of Object.entries(BOROUGH_BOUNDARIES)) {
    const isInside = turf.booleanPointInPolygon(point, boundary)
    console.log(`Testing ${boroughName}:`, {
      point: [lng, lat],
      firstBoundaryPoint: boundary.geometry.coordinates[0][0],
      isInside,
    })

    if (isInside) {
      return boroughName
    }
  }

  return null
}

export function areSameBorough(lat1, lng1, lat2, lng2) {
  const borough1 = getBorough(lat1, lng1)
  const borough2 = getBorough(lat2, lng2)
  return borough1 === borough2
}
