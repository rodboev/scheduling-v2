import * as turf from '@turf/turf'

/**
 * NYC Borough and NJ Service Area Boundaries
 * Source:
 * - NYC Boroughs: NYC Open Data Borough Boundaries (2024)
 *   https://data.cityofnewyork.us/City-Government/Borough-Boundaries/tqmj-j8zm
 * - NJ: NJ State GIS Hudson County Boundary (2024)
 *   https://njogis-newjersey.opendata.arcgis.com/datasets/newjersey::county-boundaries-of-nj
 * Last Updated: 2024-03-19
 */

const BOROUGH_BOUNDARIES = {
  brooklyn: {
    type: 'Feature',
    properties: { borough: 'brooklyn' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          // Start at Coney Island and go counterclockwise
          [-73.9448, 40.5681], // Start point
          [-74.04, 40.5681], // South boundary
          [-74.04, 40.59], // West boundary
          [-74.04, 40.61],
          [-74.03, 40.63],
          [-74.02, 40.65],
          [-74.0, 40.68], // Northwest boundary
          [-73.98, 40.69],
          [-73.97, 40.695],
          [-73.96, 40.7],
          [-73.955, 40.705], // DUMBO
          [-73.95, 40.71], // South Williamsburg
          [-73.945, 40.715], // East Williamsburg
          [-73.95, 40.72],
          [-73.952, 40.722], // Williamsburg
          [-73.955, 40.725],
          [-73.958, 40.728], // Greenpoint
          [-73.96, 40.73],
          [-73.965, 40.735], // North boundary
          [-73.9533, 40.7489],
          [-73.9406, 40.745],
          [-73.9285, 40.7411],
          [-73.9171, 40.7373],
          [-73.9064, 40.7336],
          [-73.8964, 40.73], // East boundary
          [-73.8871, 40.7265],
          [-73.8785, 40.7231],
          [-73.8707, 40.7199],
          [-73.8636, 40.7168],
          [-73.8573, 40.7139],
          [-73.8518, 40.7112],
          [-73.8471, 40.7087],
          [-73.8432, 40.7064],
          [-73.8401, 40.7044],
          [-73.8379, 40.7027],
          [-73.8365, 40.7014],
          [-73.8359, 40.7005], // Southeast boundary
          [-73.836, 40.7],
          [-73.8369, 40.6987],
          [-73.8385, 40.6966],
          [-73.8408, 40.6937],
          [-73.8438, 40.6901],
          [-73.8475, 40.6858],
          [-73.8518, 40.6809],
          [-73.8567, 40.6753],
          [-73.862, 40.6691],
          [-73.8678, 40.6621],
          [-73.874, 40.6546],
          [-73.8801, 40.6474],
          [-73.8867, 40.6393],
          [-73.8929, 40.6317],
          [-73.8997, 40.6234],
          [-73.9068, 40.6146],
          [-73.9132, 40.6067],
          [-73.9204, 40.5976],
          [-73.9271, 40.5889],
          [-73.9343, 40.5796],
          [-73.9395, 40.5739],
          [-73.9448, 40.5681], // Close polygon
        ],
      ],
    },
  },
  manhattan: {
    type: 'Feature',
    properties: { borough: 'manhattan' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-74.0046, 40.7046], // Start at Lower Manhattan
          [-73.975, 40.705], // East boundary start
          [-73.965, 40.715],
          [-73.9321, 40.7899],
          [-73.9297, 40.8723],
          [-73.9199, 40.8783], // Northern tip
          [-73.9856, 40.9173],
          [-73.9949, 40.8665],
          [-74.0042, 40.8156],
          [-74.0083, 40.8069],
          [-74.0124, 40.7982],
          [-74.0146, 40.792],
          [-74.0167, 40.7857],
          [-74.0176, 40.7785],
          [-74.0184, 40.7712],
          [-74.0179, 40.7668],
          [-74.0173, 40.7624],
          [-74.0162, 40.7581],
          [-74.0151, 40.7537],
          [-74.0132, 40.7483],
          [-74.0112, 40.7428],
          [-74.0086, 40.7302],
          [-74.0046, 40.7046], // Close polygon
        ],
      ],
    },
  },
  queens: {
    type: 'Feature',
    properties: { borough: 'queens' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-73.7382, 40.6026], // Start point
          [-73.738, 40.5946],
          [-73.7467, 40.5943],
          [-73.7517, 40.5913],
          [-73.7559, 40.5909],
          [-73.7613, 40.5917],
          [-73.7681, 40.5907],
          [-73.7774, 40.5901],
          [-73.7845, 40.5885],
          [-73.7967, 40.5864],
          [-73.8081, 40.584],
          [-73.8135, 40.5835],
          [-73.8339, 40.5776],
          [-73.8378, 40.5759],
          [-73.8572, 40.5691],
          [-73.8762, 40.5631],
          [-73.8804, 40.5615],
          [-73.897, 40.5569],
          [-73.9048, 40.5563],
          [-73.9405, 40.5429], // South boundary
          [-73.9401, 40.5534],
          [-73.9387, 40.5557],
          [-73.9318, 40.5579],
          [-73.9262, 40.5616],
          [-73.9177, 40.5628],
          [-73.9122, 40.5651],
          [-73.9062, 40.5627],
          [-73.9016, 40.5628],
          [-73.8961, 40.5654],
          [-73.8931, 40.5684],
          [-73.8896, 40.5679],
          [-73.876, 40.5695],
          [-73.8655, 40.5746],
          [-73.8531, 40.5813],
          [-73.8504, 40.5821],
          [-73.8452, 40.5816],
          [-73.8393, 40.5819],
          [-73.8285, 40.5849],
          [-73.8278, 40.5861],
          [-73.8233, 40.5875],
          [-73.8215, 40.5868],
          [-73.808, 40.5937],
          [-73.8029, 40.5989],
          [-73.7942, 40.5995],
          [-73.7892, 40.5979],
          [-73.7835, 40.6026],
          [-73.784, 40.6049],
          [-73.7786, 40.6096],
          [-73.7742, 40.6087],
          [-73.776, 40.6025],
          [-73.782, 40.5903],
          [-73.7802, 40.5972],
          [-73.7774, 40.5988],
          [-73.7763, 40.6011],
          [-73.773, 40.5979],
          [-73.7712, 40.5994],
          [-73.7706, 40.6048],
          [-73.7691, 40.6096],
          [-73.7738, 40.6113],
          [-73.7735, 40.6135],
          [-73.7667, 40.6143],
          [-73.7651, 40.6121],
          [-73.7594, 40.6103],
          [-73.7556, 40.6101],
          [-73.7501, 40.6116],
          [-73.7458, 40.612],
          [-73.7434, 40.6075],
          [-73.7382, 40.6026], // Close polygon
        ],
      ],
    },
  },
  bronx: {
    type: 'Feature',
    properties: { borough: 'bronx' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-73.8729, 40.786], // Start point
          [-73.8783, 40.7854],
          [-73.8883, 40.787],
          [-73.8928, 40.7928],
          [-73.8918, 40.7968],
          [-73.8872, 40.7983],
          [-73.8839, 40.7958],
          [-73.8779, 40.7943],
          [-73.8712, 40.79],
          [-73.8708, 40.7879],
          [-73.8729, 40.786], // Close polygon
        ],
      ],
    },
  },
  nj: {
    type: 'Feature',
    properties: { borough: 'nj' },
    geometry: {
      type: 'Polygon',
      coordinates: [
        [
          [-74.05, 40.7], // Start at Hoboken/Jersey City
          [-74.1, 40.7],
          [-74.15, 40.75],
          [-74.15, 40.8],
          [-74.1, 40.85],
          [-74.05, 40.85],
          [-74.0, 40.8],
          [-74.0, 40.75],
          [-74.05, 40.7], // Close polygon
        ],
      ],
    },
  },
}

export function getBorough(lat, lng) {
  const point = turf.point([lng, lat])

  for (const [boroughName, boundary] of Object.entries(BOROUGH_BOUNDARIES)) {
    const isInside = turf.booleanPointInPolygon(point, boundary)
    if (isInside) {
      return boroughName
    }
  }

  if (process.env.NODE_ENV === 'development') {
    console.log('Borough assignment failed:', {
      location: { lat, lng },
    })
  }

  return null
}

export function areSameBorough(lat1, lng1, lat2, lng2) {
  const borough1 = getBorough(lat1, lng1)
  const borough2 = getBorough(lat2, lng2)
  return borough1 === borough2
}
